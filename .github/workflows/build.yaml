name: Build Image

on:
  workflow_dispatch:
    inputs:
      php-version:
        required: true
        type: string
        description: 'PHP version to build'

concurrency:
  group: ${{ github.workflow }}-${{ inputs.php-version }}
  cancel-in-progress: false

jobs:
  build:
    if: ${{ github.repository == 'nayleen/docker-php' }}
    runs-on: ${{ matrix.arch == 'amd64' && 'ubuntu-24.04' || 'ubuntu-24.04-arm' }} # nice performance regression, 24.04 on arm
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        arch:
          - amd64
          - arm64
        include:
          - php: ${{ inputs.php-version }}
    steps:
      - name: Check Out
        uses: actions/checkout@v4

      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: nayleen
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Export PHP version to ENV
        run: echo "PHP_VERSION=${{ matrix.php }}" >> $GITHUB_ENV

      - name: Set Up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: network=host

      - name: Bake and Push Docker Images
        uses: docker/bake-action@v6
        with:
          source: .
          push: true
          set: |
            php.cache-from=type=registry,ref=ghcr.io/nayleen/php:${{ matrix.php }}-${{ matrix.arch }}-cache
            php.cache-to=type=registry,ref=ghcr.io/nayleen/php:${{ matrix.php }}-${{ matrix.arch }}-cache,mode=max
            php.tags=ghcr.io/nayleen/php:${{ matrix.php }}-${{ matrix.arch }}

  combine-manifests:
    needs: build
    runs-on: ubuntu-24.04
    permissions:
      actions: write
      packages: write
    steps:
      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: nayleen
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Combine Manifests
        run: |
          docker buildx imagetools create -t ghcr.io/nayleen/php:${{ inputs.php-version }} \
            ghcr.io/nayleen/php:${{ inputs.php-version }}-amd64 \
            ghcr.io/nayleen/php:${{ inputs.php-version }}-arm64
