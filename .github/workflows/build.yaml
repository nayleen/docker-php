name: Build Images

on:
  pull_request_target:
    types:
      - opened
      - reopened
      - synchronize
  push:
    branches:
      - main
  schedule:
    # run every Monday and Friday at 00:00 UTC
    - cron: '0 0 * * 1,5'

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

env:
  REMOTE_REGISTRY: docker.io/nayleen

jobs:
  build:
    env:
      LOCAL_REGISTRY: localhost:5000
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    strategy:
      fail-fast: false
      matrix:
        php:
          - 8.1
          - 8.2
          - 8.3
          - 8.4
        arch:
          - amd64
          - arm64
    runs-on: ${{ matrix.arch == 'amd64' && 'ubuntu-22.04' || 'ubuntu-22.04-arm' }} # nice segfaults, 24.04
    steps:
      - name: Check Out
        uses: actions/checkout@v4

      - name: Login to Container Registry
        if: github.repository == 'nayleen/docker-php'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Export PHP Version to ENV
        run: echo "PHP_VERSION=${{ matrix.php }}" >> $GITHUB_ENV

      - name: Export Image Name to ENV
        run: echo "IMAGE=${{ env.REMOTE_REGISTRY }}/php:${{ matrix.php }}-${{ matrix.arch }}" >> $GITHUB_ENV

      - name: Set Up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: network=host

      - name: Build Local Images
        uses: docker/bake-action@v6
        env:
          REGISTRY: ${{ env.LOCAL_REGISTRY }}
          DOCKER_BUILD_SUMMARY: false
          DOCKER_BUILD_RECORD_UPLOAD: false
        with:
          source: .
          load: true
          push: true
          set: |
            php.cache-from=type=registry,ref=${{ env.IMAGE }}-cache

      - name: Test Local Images
        env:
          REGISTRY: ${{ env.LOCAL_REGISTRY }}
        run: |
          # assume each subfolder of ./tests is a test suite and run it
          for test in $(find ./tests/* -type d); do
            cd $test && ./run.sh
            cd - > /dev/null
          done

      - name: Bake and Push Docker Images
        if: github.event_name != 'pull_request_target'
        uses: docker/bake-action@v6
        env:
          REGISTRY: ${{ env.REMOTE_REGISTRY }}
        with:
          source: .
          push: ${{ github.repository == 'nayleen/docker-php' }}
          set: |
            php.cache-from=type=registry,ref=${{ env.IMAGE }}-cache
            php.cache-to=type=registry,ref=${{ env.IMAGE }}-cache,mode=max
            php.tags=${{ env.IMAGE }}

  combine-manifests:
    if: github.event_name != 'pull_request_target'
    needs: build
    runs-on: ubuntu-22.04
    steps:
      - name: Check Out
        uses: actions/checkout@v4

      - name: Login to Container Registry
        if: github.repository == 'nayleen/docker-php'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Export Image Name Prefix to ENV
        run: echo "IMAGE=${{ env.REMOTE_REGISTRY }}/php" >> $GITHUB_ENV

      - name: Combine Manifests
        run: |
          for phpVersion in "8.1" "8.2" "8.3" "8.4"; do
            docker buildx imagetools create -t ${{ env.IMAGE }}:${phpVersion} \
              ${{ env.IMAGE }}:${phpVersion}-amd64 \
              ${{ env.IMAGE }}:${phpVersion}-arm64
          done
